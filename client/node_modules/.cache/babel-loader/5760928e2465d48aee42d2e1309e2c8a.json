{"ast":null,"code":"var _jsxFileName = \"/home/user/codeLocal/FOTOBASE2/client/src/components/context/SignUpState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SignUpContext from \"./SignUpContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpState = props => {\n  _s();\n\n  const [isShowLogin, setIsShowLogin] = useState(false);\n  const [isShowUpload, setIsShowUpload] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [result, setResult] = useState(null);\n  const [isRegistered, SetIsRegistered] = useState(false); // function App() {\n  //   const loginSession = JSON.parse(sessionStorage.getItem(\"login\")) || {\n  //   username: \"\",\n  //   loggedIn: false,\n  //   };\n  //   const [username, setUsername] = useState(loginSession[\"username\"]);\n  //   const [loggedIn, setLoggedIn] = useState(loginSession[\"loggedIn\"]);\n  //   const handleLogin = (_username) => {\n  //   if (_username) {\n  //   setUsername(_username);\n  //   setLoggedIn(true);\n  //   } else {\n  //   setUsername(\"\");\n  //   setLoggedIn(false);\n  //   }\n  //   };\n\n  const [newUser, setNewUser] = useState({\n    firstName: \"-\",\n    lastName: \"\",\n    email: \"\",\n    street: \"\",\n    city: \"\",\n    postcode: \"\",\n    country: \"\",\n    birthday: \"\",\n    password: \"\"\n  });\n\n  const logoutHandler = async () => {\n    setIsAuthenticated(false);\n    const response = await axios.get(\"http://localhost:3001/user/logout\", {\n      withCredentials: true\n    });\n    setResult(response.data);\n  };\n\n  const login = localStorage.getItem(\"login\");\n  console.log(\"test:\", login);\n\n  const handleLoginClick = async () => {\n    if (isAuthenticated) {\n      setIsAuthenticated(false);\n      localStorage.setItem(\"\");\n      const response = await axios.get(\"http://localhost:3001/user/logout\", {\n        withCredentials: true\n      });\n      setResult(response.data);\n    } else {\n      setIsShowLogin(isShowLogin => !isShowLogin);\n    }\n  };\n\n  const handleUploadClick = () => {\n    if (isAuthenticated) {\n      setIsShowUpload(isShowUpload => !isShowUpload);\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContext.Provider, {\n    value: {\n      isShowLogin,\n      setIsShowLogin,\n      handleLoginClick,\n      handleUploadClick,\n      isShowUpload,\n      isAuthenticated,\n      setIsAuthenticated,\n      result,\n      setResult,\n      logoutHandler,\n      newUser,\n      setNewUser,\n      isRegistered,\n      SetIsRegistered,\n      login\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpState, \"iHW0JZNfMe5vnBHEhc1HJAqGCZA=\");\n\n_c = SignUpState;\nexport default SignUpState;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpState\");","map":{"version":3,"sources":["/home/user/codeLocal/FOTOBASE2/client/src/components/context/SignUpState.js"],"names":["React","useState","SignUpContext","axios","SignUpState","props","isShowLogin","setIsShowLogin","isShowUpload","setIsShowUpload","isAuthenticated","setIsAuthenticated","result","setResult","isRegistered","SetIsRegistered","newUser","setNewUser","firstName","lastName","email","street","city","postcode","country","birthday","password","logoutHandler","response","get","withCredentials","data","login","localStorage","getItem","console","log","handleLoginClick","setItem","handleUploadClick","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport SignUpContext from \"./SignUpContext\";\nimport axios from \"axios\";\n\nconst SignUpState = (props) => {\n  const [isShowLogin, setIsShowLogin] = useState(false);\n  const [isShowUpload, setIsShowUpload] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [result, setResult] = useState(null);\n  const [isRegistered, SetIsRegistered] = useState(false);\n\n  // function App() {\n  //   const loginSession = JSON.parse(sessionStorage.getItem(\"login\")) || {\n  //   username: \"\",\n  //   loggedIn: false,\n  //   };\n\n  //   const [username, setUsername] = useState(loginSession[\"username\"]);\n  //   const [loggedIn, setLoggedIn] = useState(loginSession[\"loggedIn\"]);\n\n  //   const handleLogin = (_username) => {\n  //   if (_username) {\n  //   setUsername(_username);\n  //   setLoggedIn(true);\n  //   } else {\n  //   setUsername(\"\");\n  //   setLoggedIn(false);\n  //   }\n  //   };\n\n  const [newUser, setNewUser] = useState({\n    firstName: \"-\",\n    lastName: \"\",\n    email: \"\",\n    street: \"\",\n    city: \"\",\n    postcode: \"\",\n    country: \"\",\n    birthday: \"\",\n    password: \"\",\n  });\n\n  const logoutHandler = async () => {\n    setIsAuthenticated(false);\n    const response = await axios.get(\"http://localhost:3001/user/logout\", {\n      withCredentials: true,\n    });\n    setResult(response.data);\n  };\n  const login = localStorage.getItem(\"login\");\n  console.log(\"test:\", login);\n\n  const handleLoginClick = async () => {\n    if (isAuthenticated) {\n      setIsAuthenticated(false);\n      localStorage.setItem(\"\")\n      const response = await axios.get(\"http://localhost:3001/user/logout\", {\n        withCredentials: true,\n      });\n      setResult(response.data);\n    } else {\n      setIsShowLogin((isShowLogin) => !isShowLogin);\n    }\n  };\n\n  const handleUploadClick = () => {\n    if (isAuthenticated) {\n      setIsShowUpload((isShowUpload) => !isShowUpload);\n    } else {\n      return;\n    }\n  };\n  return (\n    <SignUpContext.Provider\n      value={{\n        isShowLogin,\n        setIsShowLogin,\n        handleLoginClick,\n        handleUploadClick,\n        isShowUpload,\n        isAuthenticated,\n        setIsAuthenticated,\n        result,\n        setResult,\n        logoutHandler,\n        newUser,\n        setNewUser,\n        isRegistered,\n        SetIsRegistered,\n        login\n      }}\n    >\n      {props.children}\n    </SignUpContext.Provider>\n  );\n};\n\nexport default SignUpState;\n"]},"metadata":{},"sourceType":"module"}