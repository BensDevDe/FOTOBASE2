{"ast":null,"code":"var _jsxFileName = \"/home/user/codeLocal/FOTOBASE2/client/src/components/context/SignUpState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SignUpContext from \"./SignUpContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpState = props => {\n  _s();\n\n  const [isShowLogin, setIsShowLogin] = useState(false);\n  const [isShowUpload, setIsShowUpload] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const logoutHandler = async () => {\n    setIsAuthenticated(false);\n    const resp = await axios.get(\"http://localhost:3001/users/logout\", {\n      withCredentials: true\n    });\n    setResult(resp.data);\n  };\n\n  const handleLoginClick = () => {\n    if (isAuthenticated) {} else {\n      setIsShowLogin(isShowLogin => !isShowLogin);\n    }\n  };\n\n  const handleUploadClick = () => {\n    setIsShowUpload(isShowUpload => !isShowUpload);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContext.Provider, {\n    value: {\n      isShowLogin,\n      setIsShowLogin,\n      handleLoginClick,\n      handleUploadClick,\n      isShowUpload,\n      isAuthenticated,\n      setIsAuthenticated,\n      result,\n      setResult\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpState, \"5BeF/mkABFo/7nRIi2xePm0A0IA=\");\n\n_c = SignUpState;\nexport default SignUpState;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpState\");","map":{"version":3,"sources":["/home/user/codeLocal/FOTOBASE2/client/src/components/context/SignUpState.js"],"names":["React","useState","SignUpContext","SignUpState","props","isShowLogin","setIsShowLogin","isShowUpload","setIsShowUpload","isAuthenticated","setIsAuthenticated","result","setResult","logoutHandler","resp","axios","get","withCredentials","data","handleLoginClick","handleUploadClick","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMY,aAAa,GAAG,YAAY;AAChCH,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACA,UAAMI,IAAI,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,oCAAV,EAAgD;AACjEC,MAAAA,eAAe,EAAE;AADgD,KAAhD,CAAnB;AAGAL,IAAAA,SAAS,CAACE,IAAI,CAACI,IAAN,CAAT;AACD,GAND;;AAQA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAIV,eAAJ,EAAqB,CACpB,CADD,MACO;AACLH,MAAAA,cAAc,CAAED,WAAD,IAAiB,CAACA,WAAnB,CAAd;AACD;AACF,GALD;;AAOA,QAAMe,iBAAiB,GAAG,MAAM;AAC9BZ,IAAAA,eAAe,CAAED,YAAD,IAAkB,CAACA,YAApB,CAAf;AACD,GAFD;;AAGA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,WADK;AAELC,MAAAA,cAFK;AAGLa,MAAAA,gBAHK;AAILC,MAAAA,iBAJK;AAKLb,MAAAA,YALK;AAMLE,MAAAA,eANK;AAOLC,MAAAA,kBAPK;AAQLC,MAAAA,MARK;AASLC,MAAAA;AATK,KADT;AAAA,cAaGR,KAAK,CAACiB;AAbT;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzCD;;GAAMlB,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport SignUpContext from \"./SignUpContext\";\n\nconst SignUpState = (props) => {\n  const [isShowLogin, setIsShowLogin] = useState(false);\n  const [isShowUpload, setIsShowUpload] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const logoutHandler = async () => {\n    setIsAuthenticated(false);\n    const resp = await axios.get(\"http://localhost:3001/users/logout\", {\n      withCredentials: true,\n    });\n    setResult(resp.data);\n  };\n\n  const handleLoginClick = () => {\n    if (isAuthenticated) {\n    } else {\n      setIsShowLogin((isShowLogin) => !isShowLogin);\n    }\n  };\n\n  const handleUploadClick = () => {\n    setIsShowUpload((isShowUpload) => !isShowUpload);\n  };\n  return (\n    <SignUpContext.Provider\n      value={{\n        isShowLogin,\n        setIsShowLogin,\n        handleLoginClick,\n        handleUploadClick,\n        isShowUpload,\n        isAuthenticated,\n        setIsAuthenticated,\n        result,\n        setResult,\n      }}\n    >\n      {props.children}\n    </SignUpContext.Provider>\n  );\n};\n\nexport default SignUpState;\n"]},"metadata":{},"sourceType":"module"}