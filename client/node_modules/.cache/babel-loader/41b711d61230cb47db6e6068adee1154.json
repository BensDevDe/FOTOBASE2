{"ast":null,"code":"var _jsxFileName = \"/home/user/codeLocal/FOTOBASE2/client/src/components/context/SignUpState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SignUpContext from \"./SignUpContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpState = props => {\n  _s();\n\n  const [isShowLogin, setIsShowLogin] = useState(false);\n  const [isShowUpload, setIsShowUpload] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const logoutHandler = async () => {\n    setIsAuthenticated(false);\n    const resp = await axios.get(\"http://localhost:3001/user/logout\", {\n      withCredentials: true\n    });\n    setResult(resp.data);\n  };\n\n  const handleLoginClick = () => {\n    // if (isAuthenticated) {\n    //   logoutHandler();\n    // } else {\n    setIsShowLogin(isShowLogin => !isShowLogin); // }\n  };\n\n  const handleUploadClick = () => {\n    setIsShowUpload(isShowUpload => !isShowUpload);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContext.Provider, {\n    value: {\n      isShowLogin,\n      setIsShowLogin,\n      handleLoginClick,\n      handleUploadClick,\n      isShowUpload,\n      isAuthenticated,\n      setIsAuthenticated,\n      result,\n      setResult,\n      logoutHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpState, \"5BeF/mkABFo/7nRIi2xePm0A0IA=\");\n\n_c = SignUpState;\nexport default SignUpState;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpState\");","map":{"version":3,"sources":["/home/user/codeLocal/FOTOBASE2/client/src/components/context/SignUpState.js"],"names":["React","useState","SignUpContext","axios","SignUpState","props","isShowLogin","setIsShowLogin","isShowUpload","setIsShowUpload","isAuthenticated","setIsAuthenticated","result","setResult","logoutHandler","resp","get","withCredentials","data","handleLoginClick","handleUploadClick","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMa,aAAa,GAAG,YAAY;AAChCH,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACA,UAAMI,IAAI,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,mCAAV,EAA+C;AAChEC,MAAAA,eAAe,EAAE;AAD+C,KAA/C,CAAnB;AAGAJ,IAAAA,SAAS,CAACE,IAAI,CAACG,IAAN,CAAT;AACD,GAND;;AAQA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B;AACA;AACA;AACEZ,IAAAA,cAAc,CAAED,WAAD,IAAiB,CAACA,WAAnB,CAAd,CAJ2B,CAK7B;AACD,GAND;;AAQA,QAAMc,iBAAiB,GAAG,MAAM;AAC9BX,IAAAA,eAAe,CAAED,YAAD,IAAkB,CAACA,YAApB,CAAf;AACD,GAFD;;AAGA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,WADK;AAELC,MAAAA,cAFK;AAGLY,MAAAA,gBAHK;AAILC,MAAAA,iBAJK;AAKLZ,MAAAA,YALK;AAMLE,MAAAA,eANK;AAOLC,MAAAA,kBAPK;AAQLC,MAAAA,MARK;AASLC,MAAAA,SATK;AAULC,MAAAA;AAVK,KADT;AAAA,cAcGT,KAAK,CAACgB;AAdT;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3CD;;GAAMjB,W;;KAAAA,W;AA6CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport SignUpContext from \"./SignUpContext\";\nimport axios from \"axios\";\n\nconst SignUpState = (props) => {\n  const [isShowLogin, setIsShowLogin] = useState(false);\n  const [isShowUpload, setIsShowUpload] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const logoutHandler = async () => {\n    setIsAuthenticated(false);\n    const resp = await axios.get(\"http://localhost:3001/user/logout\", {\n      withCredentials: true,\n    });\n    setResult(resp.data);\n  };\n\n  const handleLoginClick = () => {\n    // if (isAuthenticated) {\n    //   logoutHandler();\n    // } else {\n      setIsShowLogin((isShowLogin) => !isShowLogin);\n    // }\n  };\n\n  const handleUploadClick = () => {\n    setIsShowUpload((isShowUpload) => !isShowUpload);\n  };\n  return (\n    <SignUpContext.Provider\n      value={{\n        isShowLogin,\n        setIsShowLogin,\n        handleLoginClick,\n        handleUploadClick,\n        isShowUpload,\n        isAuthenticated,\n        setIsAuthenticated,\n        result,\n        setResult,\n        logoutHandler\n      }}\n    >\n      {props.children}\n    </SignUpContext.Provider>\n  );\n};\n\nexport default SignUpState;\n"]},"metadata":{},"sourceType":"module"}