{"ast":null,"code":"var _jsxFileName = \"/home/user/codeLocal/FOTOBASE2/client/src/components/context/SignUpState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SignUpContext from \"./SignUpContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpState = props => {\n  _s();\n\n  const [isShowLogin, setIsShowLogin] = useState(false);\n  const [isShowUpload, setIsShowUpload] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [result, setResult] = useState(null);\n  const [isRegistered, SetIsRegistered] = useState(false);\n  const [username, setUsername] = useState(loginSession[\"username\"]);\n  const [loggedIn, setLoggedIn] = useState(loginSession[\"loggedIn\"]);\n\n  const loginSession = () => {\n    const loginSession = JSON.parse(sessionStorage.getItem(\"login\")) || {\n      username: \"\",\n      loggedIn: false\n    };\n\n    const handleLogin = _username => {\n      if (_username) {\n        setUsername(_username);\n        setLoggedIn(true);\n      } else {\n        setUsername(\"\");\n        setLoggedIn(false);\n      }\n    };\n  };\n\n  const [newUser, setNewUser] = useState({\n    firstName: \"-\",\n    lastName: \"\",\n    email: \"\",\n    street: \"\",\n    city: \"\",\n    postcode: \"\",\n    country: \"\",\n    birthday: \"\",\n    password: \"\"\n  });\n\n  const logoutHandler = async () => {\n    setIsAuthenticated(false);\n    const response = await axios.get(\"http://localhost:3001/user/logout\", {\n      withCredentials: true\n    });\n    setResult(response.data);\n  };\n\n  const handleLoginClick = async () => {\n    if (isAuthenticated) {\n      setIsAuthenticated(false);\n      const response = await axios.get(\"http://localhost:3001/user/logout\", {\n        withCredentials: true\n      });\n      setResult(response.data);\n    } else {\n      setIsShowLogin(isShowLogin => !isShowLogin);\n    }\n  };\n\n  const handleUploadClick = () => {\n    if (isAuthenticated) {\n      setIsShowUpload(isShowUpload => !isShowUpload);\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContext.Provider, {\n    value: {\n      isShowLogin,\n      setIsShowLogin,\n      handleLoginClick,\n      handleUploadClick,\n      isShowUpload,\n      isAuthenticated,\n      setIsAuthenticated,\n      result,\n      setResult,\n      logoutHandler,\n      newUser,\n      setNewUser,\n      isRegistered,\n      SetIsRegistered\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpState, \"akRxsF/XcL5EKy7ZM5FmhyfCMeE=\");\n\n_c = SignUpState;\nexport default SignUpState;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpState\");","map":{"version":3,"sources":["/home/user/codeLocal/FOTOBASE2/client/src/components/context/SignUpState.js"],"names":["React","useState","SignUpContext","axios","SignUpState","props","isShowLogin","setIsShowLogin","isShowUpload","setIsShowUpload","isAuthenticated","setIsAuthenticated","result","setResult","isRegistered","SetIsRegistered","username","setUsername","loginSession","loggedIn","setLoggedIn","JSON","parse","sessionStorage","getItem","handleLogin","_username","newUser","setNewUser","firstName","lastName","email","street","city","postcode","country","birthday","password","logoutHandler","response","get","withCredentials","data","handleLoginClick","handleUploadClick","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;AAGA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACiB,YAAY,CAAC,UAAD,CAAb,CAAxC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAACiB,YAAY,CAAC,UAAD,CAAb,CAAxC;;AAGA,QAAMA,YAAY,GAAG,MAAM;AACzB,UAAMA,YAAY,GAAGG,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAX,KAA+C;AAClER,MAAAA,QAAQ,EAAE,EADwD;AAElEG,MAAAA,QAAQ,EAAE;AAFwD,KAApE;;AAOE,UAAMM,WAAW,GAAIC,SAAD,IAAe;AACnC,UAAIA,SAAJ,EAAe;AACfT,QAAAA,WAAW,CAACS,SAAD,CAAX;AACAN,QAAAA,WAAW,CAAC,IAAD,CAAX;AACC,OAHD,MAGO;AACPH,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAG,QAAAA,WAAW,CAAC,KAAD,CAAX;AACC;AACA,KARD;AASH,GAjBD;;AAuBA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC;AACrC4B,IAAAA,SAAS,EAAE,GAD0B;AAErCC,IAAAA,QAAQ,EAAE,EAF2B;AAGrCC,IAAAA,KAAK,EAAE,EAH8B;AAIrCC,IAAAA,MAAM,EAAE,EAJ6B;AAKrCC,IAAAA,IAAI,EAAE,EAL+B;AAMrCC,IAAAA,QAAQ,EAAE,EAN2B;AAOrCC,IAAAA,OAAO,EAAE,EAP4B;AAQrCC,IAAAA,QAAQ,EAAE,EAR2B;AASrCC,IAAAA,QAAQ,EAAE;AAT2B,GAAD,CAAtC;;AAYA,QAAMC,aAAa,GAAG,YAAY;AAChC3B,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACA,UAAM4B,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAN,CAAU,mCAAV,EAA+C;AACpEC,MAAAA,eAAe,EAAE;AADmD,KAA/C,CAAvB;AAGA5B,IAAAA,SAAS,CAAC0B,QAAQ,CAACG,IAAV,CAAT;AACD,GAND;;AAQA,QAAMC,gBAAgB,GAAG,YAAY;AACnC,QAAIjC,eAAJ,EAAqB;AACnBC,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACA,YAAM4B,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAN,CAAU,mCAAV,EAA+C;AACpEC,QAAAA,eAAe,EAAE;AADmD,OAA/C,CAAvB;AAGA5B,MAAAA,SAAS,CAAC0B,QAAQ,CAACG,IAAV,CAAT;AACD,KAND,MAMO;AACLnC,MAAAA,cAAc,CAAED,WAAD,IAAiB,CAACA,WAAnB,CAAd;AACD;AACF,GAVD;;AAYA,QAAMsC,iBAAiB,GAAG,MAAM;AAC9B,QAAIlC,eAAJ,EAAqB;AACnBD,MAAAA,eAAe,CAAED,YAAD,IAAkB,CAACA,YAApB,CAAf;AACD,KAFD,MAEO;AACL;AACD;AACF,GAND;;AAOA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,WADK;AAELC,MAAAA,cAFK;AAGLoC,MAAAA,gBAHK;AAILC,MAAAA,iBAJK;AAKLpC,MAAAA,YALK;AAMLE,MAAAA,eANK;AAOLC,MAAAA,kBAPK;AAQLC,MAAAA,MARK;AASLC,MAAAA,SATK;AAULyB,MAAAA,aAVK;AAWLX,MAAAA,OAXK;AAYLC,MAAAA,UAZK;AAaLd,MAAAA,YAbK;AAcLC,MAAAA;AAdK,KADT;AAAA,cAmBGV,KAAK,CAACwC;AAnBT;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAjGD;;GAAMzC,W;;KAAAA,W;AAmGN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport SignUpContext from \"./SignUpContext\";\nimport axios from \"axios\";\n\nconst SignUpState = (props) => {\n  const [isShowLogin, setIsShowLogin] = useState(false);\n  const [isShowUpload, setIsShowUpload] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [result, setResult] = useState(null);\n  const [isRegistered, SetIsRegistered] = useState(false);\n\n\n  const [username, setUsername] = useState(loginSession[\"username\"]);\n  const [loggedIn, setLoggedIn] = useState(loginSession[\"loggedIn\"]);\n\n\n  const loginSession = () => {\n    const loginSession = JSON.parse(sessionStorage.getItem(\"login\")) || {\n      username: \"\",\n      loggedIn: false,\n      };\n      \n      \n      \n      const handleLogin = (_username) => {\n      if (_username) {\n      setUsername(_username);\n      setLoggedIn(true);\n      } else {\n      setUsername(\"\");\n      setLoggedIn(false);\n      }\n      }; \n  };\n\n \n\n \n\n  const [newUser, setNewUser] = useState({\n    firstName: \"-\",\n    lastName: \"\",\n    email: \"\",\n    street: \"\",\n    city: \"\",\n    postcode: \"\",\n    country: \"\",\n    birthday: \"\",\n    password: \"\",\n  });\n\n  const logoutHandler = async () => {\n    setIsAuthenticated(false);\n    const response = await axios.get(\"http://localhost:3001/user/logout\", {\n      withCredentials: true,\n    });\n    setResult(response.data);\n  };\n\n  const handleLoginClick = async () => {\n    if (isAuthenticated) {\n      setIsAuthenticated(false);\n      const response = await axios.get(\"http://localhost:3001/user/logout\", {\n        withCredentials: true,\n      });\n      setResult(response.data);\n    } else {\n      setIsShowLogin((isShowLogin) => !isShowLogin);\n    }\n  };\n\n  const handleUploadClick = () => {\n    if (isAuthenticated) {\n      setIsShowUpload((isShowUpload) => !isShowUpload);\n    } else {\n      return;\n    }\n  };\n  return (\n    <SignUpContext.Provider\n      value={{\n        isShowLogin,\n        setIsShowLogin,\n        handleLoginClick,\n        handleUploadClick,\n        isShowUpload,\n        isAuthenticated,\n        setIsAuthenticated,\n        result,\n        setResult,\n        logoutHandler,\n        newUser,\n        setNewUser,\n        isRegistered,\n        SetIsRegistered,\n     \n      }}\n    >\n      {props.children}\n    </SignUpContext.Provider>\n  );\n};\n\nexport default SignUpState;\n\n\n\n"]},"metadata":{},"sourceType":"module"}